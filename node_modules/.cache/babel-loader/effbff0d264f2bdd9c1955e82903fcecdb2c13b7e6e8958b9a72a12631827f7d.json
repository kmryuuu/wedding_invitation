{"ast":null,"code":"var _jsxFileName = \"/Users/ryu/Desktop/wedding-mo/wedding/src/sections/GuestBook.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../utills/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GuestBook() {\n  _s();\n  const [test, setTest] = useState();\n  // async - await로 데이터 fetch 대기\n  async function getTest() {\n    // document에 대한 참조 생성\n    const docRef = doc(db, 'items', '1');\n    // 참조에 대한 Snapshot 쿼리\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      setTest(docSnap.data());\n    }\n  }\n  // 최초 마운트 시에 getTest import\n  useEffect(() => {\n    getTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: test !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: test.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(GuestBook, \"ffbRLK4hwFY9wDhZRJE1amRYLZY=\");\n_c = GuestBook;\nvar _c;\n$RefreshReg$(_c, \"GuestBook\");","map":{"version":3,"names":["React","useState","useEffect","db","doc","getDoc","jsxDEV","_jsxDEV","GuestBook","_s","test","setTest","getTest","docRef","docSnap","exists","data","children","undefined","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryu/Desktop/wedding-mo/wedding/src/sections/GuestBook.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../utills/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\n\nexport default function GuestBook() {\n  const [test, setTest] = useState();\n  // async - await로 데이터 fetch 대기\n  async function getTest() {\n    // document에 대한 참조 생성\n    const docRef = doc(db, 'items', '1');\n    // 참조에 대한 Snapshot 쿼리\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setTest(docSnap.data());\n    }\n  }\n  // 최초 마운트 시에 getTest import\n  useEffect(() => {\n    getTest();\n  }, []);\n  return <div>{test !== undefined && <div>{test.name}</div>}</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC;EACA,eAAeW,OAAOA,CAAA,EAAG;IACvB;IACA,MAAMC,MAAM,GAAGT,GAAG,CAACD,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC;IACpC;IACA,MAAMW,OAAO,GAAG,MAAMT,MAAM,CAACQ,MAAM,CAAC;IAEpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACpBJ,OAAO,CAACG,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;IACzB;EACF;EACA;EACAd,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOL,OAAA;IAAAU,QAAA,EAAMP,IAAI,KAAKQ,SAAS,iBAAIX,OAAA;MAAAU,QAAA,EAAMP,IAAI,CAACS;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClE;AAACd,EAAA,CAlBuBD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}